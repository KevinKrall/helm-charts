# Default values for urlshortener.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/adfinis-sygroup/urlshortener
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: edge 
  waitForItTimeout: 60

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  externalPort: 80
  internalPort: 3000

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: urlshortenerkevin.apps.aks-adfch-k8s-int-test-02.cloud.adfinis.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
    # urlshortener.livenessProbe.enabled -- Enable liveness probe on urlshortener
    enabled: true
    # urlshortener.livenessProbe.initialDelaySeconds -- Number of seconds after the container has started before liveness probe is initiated
    initialDelaySeconds: 60
    # urlshortener.livenessProbe.periodSeconds -- How often (in seconds) to perform the probe
    periodSeconds: 10
    # urlshortener.livenessProbe.timeoutSeconds -- Number of seconds after which the probe times out
    timeoutSeconds: 5
    # urlshortener.livenessProbe.failureThreshold -- Number of tries to perform the probe
    failureThreshold: 6
    # urlshortener.livenessProbe.successThreshold -- Minimum consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1
readinessProbe:
    # urlshortener.readinessProbe.enabled -- Enable readiness probe on urlshortener
    enabled: true
    # urlshortener.readinessProbe.initialDelaySeconds -- Number of seconds after the container has started before readiness probe is initiated
    initialDelaySeconds: 30
    # urlshortener.readinessProbe.periodSeconds -- How often (in seconds) to perform the probe
    periodSeconds: 10
    # urlshortener.readinessProbe.timeoutSeconds -- Number of seconds after which the probe times out
    timeoutSeconds: 5
    # urlshortener.readinessProbe.failureThreshold -- Number of tries to perform the probe
    failureThreshold: 6
    # urlshortener.readinessProbe.successThreshold -- Minimum consecutive successes for the probe to be considered successful after having failed
    successThreshold: 1

postgresql:
  # postgresql.enabled -- Enable PostgreSQL for persistence
  enabled: true
  # postgresql.postgresqlDatabase -- PostgreSQL database name
  postgresqlDatabase: urlshortener
  # postgresql.postgresqlUsername -- PostgreSQL user name
  postgresqlUsername: urlshortener
  # postgresql.postgresqlPassword -- Set a password for PostgreSQL
  #postgresqlPassword: urlshortener
  # postgresql.postgresqlPort-- PostgreSQL database port
  postgresqlPort: 5432
  #fullname: db
  initdbScripts:
    init.sql: |
      CREATE TABLE urlshortener (
        id SERIAL primary key NOT NULL,
        url TEXT NOT NULL,
        alias VARCHAR(255) NULL,
        exp_date DATE NULL,
        visit_count INT NOT NULL DEFAULT 0
      );
